//glow:keepspace
// Code generated by glow (https://github.com/go-gl/glow). DO NOT EDIT.

package {{.Name}}
//glow:rmspace

{{define "paramsGoDecl"}}{{range $i, $p := .}}{{if ne $i 0}}, {{end}}{{$p.GoName}} {{$p.Type.GoType}}{{end}}{{end}}

import (
	{{if .HasRequiredFunctions}}
	"errors"
	{{end}}
	"math"
	"syscall"
	"unsafe"
)

var (
	{{range .Functions}}
	gp{{.GoName}} uintptr
	{{end}}
)

func boolToUintptr(b bool) uintptr {
	if b {
		return 1
	}
	return 0
}

{{range .Functions}}
{{.Comment}}
func {{.GoName}}({{template "paramsGoDecl" .Parameters}}){{if not .Return.IsVoid}} {{.Return.GoType}}{{end}} {
	{{if not .IsImplementedForSyscall}}panic("\"{{.GoName}}\" is not implemented")
	{{else if .Return.IsVoid}}{{.Syscall}}
	{{else}}
	ret, _, _ := {{.Syscall}}
	return {{.Return.ConvertUintptrToGo "ret"}}
	{{end}}
}
{{end}}

// InitWithProcAddrFunc intializes the package using the specified OpenGL
// function pointer loading function. For more cases Init should be used
// instead.
func InitWithProcAddrFunc(getProcAddr func(name string) unsafe.Pointer) error {
	{{range .Functions}}
	gp{{.GoName}} = uintptr(getProcAddr("{{.Name}}"))
	{{if .Required}}
	if gp{{.GoName}} == 0 {
		return errors.New("{{.Name}}")
	}
	{{end}}
	{{end}}
	return nil
}
